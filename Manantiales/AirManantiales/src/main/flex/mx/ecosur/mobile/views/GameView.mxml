<?xml version="1.0"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:s="library://ns.adobe.com/flex/spark"
        xmlns:c="mx.ecosur.mobile.component.*"
        xmlns:m="mx.ecosur.multigame.manantiales.*"
        name="gameView"
        creationComplete="init(event)"  skinClass="mx.ecosur.mobile.skins.BitmapSkin" >
    <fx:Script>
        <![CDATA[
        import mx.core.FlexGlobals;
        import mx.ecosur.mobile.Controller;
        import mx.ecosur.multigame.enum.Color;
        import mx.ecosur.multigame.enum.GameState;
        import mx.rpc.events.FaultEvent;
        import mx.rpc.events.ResultEvent;
        
        import mx.ecosur.multigame.manantiales.entity.ManantialesGame;
        import mx.ecosur.multigame.manantiales.entity.ManantialesPlayer;

        public static var gameId:int;

        [Bindable]
        protected var game:ManantialesGame;

        [Bindable]
        protected var player:ManantialesPlayer;

        protected var controller:Controller;

        private var tokenSize:int = 60;

        public function resultHandler(event:ResultEvent):void {
            game = ManantialesGame(event.result);
            for (var i:int = 0; i< game.players.length; i++) {
                var p:ManantialesPlayer = ManantialesPlayer(game.players [ i ]);
                if (p.name == FlexGlobals.topLevelApplication.registrant.name) {
                    player = p;
                    break;
                }
            }

            currentState = game.mode;

            if (game.state = GameState.PLAY) {
                var current:ManantialesPlayer = null;
                for (var i:int = 0; i < game.players.length; i++) {
                    var p:ManantialesPlayer = ManantialesPlayer(game.players [ i ]);
                    if (p.turn == true) {
                        current = p;
                        break;
                    }
                }
                if (p.name == FlexGlobals.topLevelApplication.registrant.name) {
                    status.showMessage("It's your turn");
                } else {
                    status.showMessage(p.name + " to move");
                }
                
            } else {
                status.showMessage("Waiting for more players ...");
            }

        }

        public function faultHandler(event:FaultEvent):void {
            trace("Fault: " + event.fault);

        }

        private function init(event:Event):void {
            controller = new Controller();
            if (gameId != 0) {
                gameService.getGame(gameId);
            }

            status.showMessage("Loading game ..");


        }

        ]]>
    </fx:Script>
    <fx:Declarations>
        <s:RemoteObject id="gameService" destination="gameService"
                        channelSet="{FlexGlobals.topLevelApplication.amfChannelSet}"
                        result="resultHandler(event)"
                        fault="faultHandler(event)" />
        <s:ArrayCollection id="tokenTypes">
            <fx:Object label="Managed Forest" data="FOREST" />
            <fx:Object label="Moderate Ranching" data="MODERATE" />
            <fx:Object label="Intensive Ranching" data="INTENSIVE"/>
            <fx:Object label="Nursery Establishment" data="VIVERO" includeIn="SILVOPASTORAL"/>
            <fx:Object label="Silvopastoral Ranching" data="SILVOPASTORAL" includeIn="SILVOPASTORAL,SILVO_PUZZLE"/>
        </s:ArrayCollection>
    </fx:Declarations>
    <s:states>
        <s:State name="WAITING"/>
        <s:State name="COMPETITIVE"/>
        <s:State name="BASIC_PUZZLE"/>
        <s:State name="SILVOPASTORAL"/>
        <s:State name="SILVO_PUZZLE"/>
    </s:states>
    <s:navigationContent>
        <s:Button label="Back" buttonDown="navigator.popView()" />
    </s:navigationContent>
    <s:layout>
        <s:HorizontalLayout/>
    </s:layout>
    <s:Group id="sideview" width="300">
        <s:layout>
            <s:VerticalLayout/>
        </s:layout>
        <c:StatusBox id="status" skinClass="mx.ecosur.mobile.skins.StatusSkin" color="#F5F5DC"/>
        <s:SpinnerListContainer >
            <s:SpinnerList id="modeList" dataProvider="{tokenTypes}" width="300" fontSize="16" />
        </s:SpinnerListContainer>
    </s:Group>
    <s:Group id="boardView" width="100%" height="100%">
        <m:ManantialesBoard id="board" width="100%" height="100%"/>
    </s:Group>
</s:View>
