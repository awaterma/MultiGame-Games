/*
* Copyright (C) 2010 ECOSUR, Andrew Waterman
*
* Licensed under the Academic Free License v. 3.0.
* http://www.opensource.org/licenses/afl-3.0.php
*/

/*
 * This rule package governs the "Simple" agent.
 *
 * The agent seeks to create new moves on the board (if possible),
 * and if not, upgrade moves, and finally, a pass
 * move (badYear).  Move creation is pushed into the
 * blackbox "SimpleAgent".
 * 
 * @author awaterma@ecosur.mx
*/

package mx.ecosur.multigame.impl.entity.manantiales;

import mx.ecosur.multigame.enums.*;
import mx.ecosur.multigame.grid.entity.*;
import mx.ecosur.multigame.grid.util.*;
import mx.ecosur.multigame.model.interfaces.*;
import mx.ecosur.multigame.impl.*;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.Random;
import java.util.Set;

rule "new-move"
    lock-on-active true
    salience 5
when
    game   : ManantialesGame (state == GameState.PLAY, $grid : grid)
    player : SimpleAgent (turn == true, nextMove == null)
then
    Set newMoves = player.findNewMoves(game);
    ManantialesMove nextMove = (ManantialesMove) newMoves.iterator().next();
    modify (player) { setNextMove (nextMove) }
end


rule "upgrade-move"
    lock-on-active true
when
    game   : ManantialesGame (state == GameState.PLAY, $grid : grid)
    player : SimpleAgent (turn == true, nextMove == null)
then
    Set upgrades = player.findUpgradeMoves(game);
    ManantialesMove nextMove = (ManantialesMove) upgrades.iterator().next();
    modify (player) { setNextMove (nextMove) }
end

rule "skip-move"
    lock-on-active true
    salience -5
when
    game   : ManantialesGame (state == GameState.PLAY, $grid : grid)
    player : SimpleAgent (turn == true, nextMove == null)
then
    ManantialesMove nextMove = player.generatePassMove(game);
    modify (player) { setNextMove (nextMove) }
end

rule "error"
    salience -15
when
    player : SimpleAgent (turn == false)
then
    throw new RuntimeException ("SimpleAgent injected with wrong turn info: " + player.toString());
end